/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tcc.apresentacao;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import static tcc.apresentacao.TabelaParcelas.tabelaParcelas;
import tcc.dao.VendaDao;
import tcc.dominio.ClienteFisico;
import tcc.dominio.DetalhamentoConta;
import tcc.dominio.Parcelas;
import tcc.dominio.Venda;
import tcc.negocio.ClienteFisicoController;
import tcc.negocio.DetalhamentoController;
import tcc.negocio.ParcelaController;

/**
 *
 * @author Breno-
 */
public class CadastrarParcelamentoVendas extends javax.swing.JInternalFrame {

    ClienteFisicoController clientecontroller = new ClienteFisicoController();
    DetalhamentoController detalhamentocontroller = new DetalhamentoController();
    ParcelaController parcelacontroller = new ParcelaController();
    
    String [] colunas = {"Cód.Venda", "Cliente", "Valor Compra", "Forma Pagamento", "Data da Venda", "Cod.Cliente", "Opções"};
    
    SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    
    public CadastrarParcelamentoVendas() {
        initComponents();
        
        carregarTabela();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        listaClientes = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaVendas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        codVenda = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        valorVenda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        qtdParcelas = new javax.swing.JTextField();
        valorParcela = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        formaPagamento = new javax.swing.JTextField();
        salvarParcelas = new javax.swing.JButton();

        setClosable(true);
        setTitle("Lorem Auctor - Cadastrar Parcelas");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Selecione um Cliente:");

        listaClientes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        listaClientes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione um Cliente" }));
        listaClientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listaClientesItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(listaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        tabelaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaVendas.setRowHeight(25);
        tabelaVendas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabelaVendasFocusLost(evt);
            }
        });
        tabelaVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaVendasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaVendasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaVendas);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Cód.Venda:");

        codVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codVendaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Valor Venda:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Quantidade Parcelas:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Valor Parcela:");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("Forma Pagamento:");

        salvarParcelas.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        salvarParcelas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/13.png"))); // NOI18N
        salvarParcelas.setText("Construir carnê");
        salvarParcelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarParcelasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(qtdParcelas, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(codVenda))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(valorParcela, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(valorVenda))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(formaPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                        .addGap(177, 177, 177))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(salvarParcelas)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(codVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(qtdParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(valorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(formaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(valorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(salvarParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 968, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaClientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listaClientesItemStateChanged
        String cliente = listaClientes.getSelectedItem().toString();
        buscarVendasRealizadas(cliente);
        if(tabelaVendas.getRowCount() == 0){
            
            JOptionPane.showMessageDialog(null, "Não há vendas realizadas com "+ cliente);
        }
    }//GEN-LAST:event_listaClientesItemStateChanged

    private void tabelaVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVendasMouseClicked
        pegarValores();
    }//GEN-LAST:event_tabelaVendasMouseClicked

    private void codVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codVendaActionPerformed

    private void salvarParcelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarParcelasActionPerformed
        //VERIFICANDO SE O CLIENTE SELECIONOU ALGUMA VENDA
        if(codVenda.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Selecione uma venda!");
            return;
        }
        //VERIFICANDO SE A VENDA SELECIONADA JÁ FOI CADASTRADA
        int vendaSelecionada = tabelaVendas.getSelectedRow();
        int idVenda = Integer.parseInt(tabelaVendas.getValueAt(tabelaVendas.getSelectedRow(), 0).toString());
        Vector vetor = ((DefaultTableModel) tabelaVendas.getModel()).getDataVector();
            

        TabelaParcelas obj0 = new TabelaParcelas();
        TelaPrincipal.Addtelaprincipal(obj0);
        TabelaParcelas.carregarinformacoescliente((Vector)vetor.get(vendaSelecionada));
 
        if(tabelaParcelas.getRowCount() >= 1){
            JOptionPane.showMessageDialog(null, "As parcelas da venda selecionada já foram cadastradas!");
            return;
        }

        /*
        String nomeCliente = "";
        double vx = 0.00;
        BigDecimal valor = new BigDecimal(vx);
        int idClienteSelecionado = 0;
        int idVendaSelecionada = 0;
        
        for(int i =0;i<tabelaVendas.getRowCount();i++){
            int codVendax = (Integer)tabelaVendas.getValueAt(vendaSelecionada, 0);
            String cliente = tabelaVendas.getValueAt(vendaSelecionada, 1).toString();
            BigDecimal valorVendax = new BigDecimal(tabelaVendas.getValueAt(vendaSelecionada, 2).toString());
            String formaPagamentox = tabelaVendas.getValueAt(vendaSelecionada, 3).toString();
            int idCliente = (Integer)tabelaVendas.getValueAt(vendaSelecionada, 5);
            
            codVenda.setText(String.valueOf(codVendax));
            valorVenda.setText(String.valueOf(valorVendax));
            formaPagamento.setText(formaPagamentox);
            
            nomeCliente = cliente;
            valor = valorVendax;
            idClienteSelecionado = idCliente;
            idVendaSelecionada = codVendax;
        }
        */
        
            int codVenda = (Integer)tabelaVendas.getValueAt(vendaSelecionada, 0);
            String cliente = tabelaVendas.getValueAt(vendaSelecionada, 1).toString();
            BigDecimal valorVenda = new BigDecimal(tabelaVendas.getValueAt(vendaSelecionada, 2).toString());
            String formaPagamentox = tabelaVendas.getValueAt(vendaSelecionada, 3).toString();
            int idCliente = (Integer)tabelaVendas.getValueAt(vendaSelecionada, 5);
          
        
        String a = formaPagamento.getText().trim();
        char letra = '/';
        char[] palavra = a.toCharArray();
        int nParcelas = 0;
        for (int i = 0; i < palavra.length; i++) {
            if (palavra[i] == letra) {
        nParcelas++;
    } 
}
        
        Parcelas p = new Parcelas();
        ClienteFisico cf = new ClienteFisico();
        Venda v = new Venda();
        DetalhamentoConta dc = new DetalhamentoConta();
        
        StringTokenizer st = new StringTokenizer(a, "/");
        
        BigDecimal NParcelas = new BigDecimal(nParcelas+1);
        BigDecimal valorParcelaVenda = valorVenda.divide(NParcelas, BigDecimal.ROUND_UP);
        
        valorParcela.setText(String.valueOf(valorParcelaVenda));
        qtdParcelas.setText(String.valueOf(NParcelas));
        
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        Date data = new Date();
        String dataFormatada = formatador.format(data);
        
         double Pago = 0.00;
         BigDecimal totalPago = new BigDecimal(Pago);
         
        while(st.hasMoreTokens()){
            String token = st.nextToken();
            Calendar c = Calendar.getInstance();        
            c.add(Calendar.DAY_OF_MONTH, Integer.parseInt(token));
            
            Date d = c.getTime();
            String datee = df.format(d);
            
            cf.setIdCliente(idCliente);
            cf.setNome(cliente);
            
            v.setIdVenda(codVenda);
            v.setFormaPagamento(formaPagamento.getText().trim());

            p.setValorTotalCompra(new BigDecimal(valorVenda.doubleValue()));
            p.setQuantidadeParcelas(nParcelas+1);
            p.setValorDevido(valorParcelaVenda);
            p.setDescricao("VENCIMENTO");
            p.setDataVencimento(datee);
            p.setSituacaoParcela("EM ABERTO");
            p.setCliente(cf);
            p.setVenda(v);
           
            dc.setObservação("VENCIMENTO");
            dc.setSituacao("EM ABERTO");
            dc.setData(dataFormatada);
            dc.setValor(valorParcelaVenda);
            dc.setValorPago(totalPago);
            dc.setSaldoDevedor(valorParcelaVenda);
            dc.setParcela(p);
            dc.setVenda(v);
            dc.setDatasVencimento(datee);
            dc.setFormaPagamento(formaPagamento.getText().trim());
            dc.setCliente(cf);
            try {
                parcelacontroller.CadastrarParcelas(p);
                detalhamentocontroller.CDetalhamento(dc);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Não foi possível cadastrar as Parcelas para a venda desejada!");
                ex.printStackTrace();
                return;
            }
        }
            JOptionPane.showMessageDialog(null, "Parcelas cadastradas com sucesso!");   
    }//GEN-LAST:event_salvarParcelasActionPerformed

    private void tabelaVendasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaVendasFocusLost
        
    }//GEN-LAST:event_tabelaVendasFocusLost

    private void tabelaVendasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVendasMousePressed
        pegarValores();
    }//GEN-LAST:event_tabelaVendasMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codVenda;
    private javax.swing.JTextField formaPagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox listaClientes;
    private javax.swing.JTextField qtdParcelas;
    private javax.swing.JButton salvarParcelas;
    private javax.swing.JTable tabelaVendas;
    private javax.swing.JTextField valorParcela;
    private javax.swing.JTextField valorVenda;
    // End of variables declaration//GEN-END:variables
    private void carregarTabela() {
       try {
           List<ClienteFisico> clientes = clientecontroller.listarClientes();
           for (ClienteFisico cliente : clientes) {
               
               listaClientes.addItem(cliente);
           }
       } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Não foi possivel mostrar os produtos!");
       
       }
    }
    
              private void buscarVendasRealizadas(String pesquisa) {
           
        try {
            VendaDao vdao = new VendaDao();
            List<Venda> venda = vdao.buscarVendas(pesquisa);
            DefaultTableModel model = new DefaultTableModel(colunas, 0);
            for (Venda y : venda) {
                model.addRow(new Object[] {
                    y.getIdVenda(),
                    y.getClienteFisico(),
                    y.getTotal(),
                    y.getFormaPagamento(),
                    y.getDataVenda(),
                    y.getClienteFisico().getIdCliente()
                  });
            }
           tabelaVendas.setModel(model);
           
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao listar as Vendas!");
        }
        tabelaVendas.setDefaultEditor(Object.class, null);
        ButtonColumn buttomColumn = new ButtonColumn(tabelaVendas, 6, "Detalhar Venda");
              }
              
    class ButtonColumn extends AbstractCellEditor implements TableCellRenderer, TableCellEditor, ActionListener
    {
        JTable table;
        JButton renderButton;
        JButton editButton;
        String text;
        public ButtonColumn(JTable table, int column, String text)
        {
            super();
            this.table = table;
            renderButton = new JButton();
            renderButton.setText(text);
            editButton = new JButton();
            editButton.setFocusPainted( false );
            editButton.addActionListener( this );
            editButton.setText(text);
            TableColumnModel columnModel = table.getColumnModel();
            columnModel.getColumn(column).setCellRenderer( this );
            columnModel.getColumn(column).setCellEditor( this );
        }
        public Component getTableCellRendererComponent(
            JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
        {
            if (hasFocus)
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }
            else if (isSelected)
            {
                renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
            else
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }
            //renderButton.setText( (value == null) ? "" : value.toString() );
            return renderButton;
        }
        public Component getTableCellEditorComponent(
            JTable table, Object value, boolean isSelected, int row, int column)
        {
            //text = (value == null) ? "" : value.toString();
            //editButton.setText( text );
            return editButton;
        }
        public Object getCellEditorValue()
        {
            return text;
        }
        public void actionPerformed(ActionEvent e)
        {
            int linhaSelecionada = tabelaVendas.getSelectedRow();
            int idVenda = Integer.parseInt(table.getModel().getValueAt(table.getSelectedRow(), 0).toString());
            Vector vetor = ((DefaultTableModel) table.getModel()).getDataVector();
            TabelaParcelas obj0 = new TabelaParcelas();
            TelaPrincipal.Addtelaprincipal(obj0);
            TabelaParcelas.carregarinformacoescliente((Vector)vetor.get(linhaSelecionada));
            
        }
    }
    
    public void pegarValores(){
         int vendaSelecionada = tabelaVendas.getSelectedRow();
        
        double vx = 0.00;
        BigDecimal valor = new BigDecimal(vx);
        
        for(int i =0;i<tabelaVendas.getRowCount();i++){
            int codVendax = (Integer)tabelaVendas.getValueAt(vendaSelecionada, 0);
            String cliente = tabelaVendas.getValueAt(vendaSelecionada, 1).toString();
            BigDecimal valorVendax = new BigDecimal(tabelaVendas.getValueAt(vendaSelecionada, 2).toString());
            String formaPagamentox = tabelaVendas.getValueAt(vendaSelecionada, 3).toString();
            int idCliente = (Integer)tabelaVendas.getValueAt(vendaSelecionada, 5);
            
            codVenda.setText(String.valueOf(codVendax));
            valorVenda.setText(String.valueOf(valorVendax));
            formaPagamento.setText(formaPagamentox);
            valor = valorVendax;
        }
        
        String a = formaPagamento.getText().trim();
        char letra = '/';
        char[] palavra = a.toCharArray();
        int nParcelas = 0;
        for (int i = 0; i < palavra.length; i++) {
            if (palavra[i] == letra) {
        nParcelas++;
    } 
}
        
        Parcelas p = new Parcelas();
        ClienteFisico cf = new ClienteFisico();
        Venda v = new Venda();
        StringTokenizer st = new StringTokenizer(a, "/");
        
        
        BigDecimal NParcelas = new BigDecimal(nParcelas+1);
        BigDecimal divisao = valor.divide(NParcelas, BigDecimal.ROUND_UP);
        System.out.println(valor);
        System.out.println(NParcelas);
        
        valorParcela.setText(String.valueOf(divisao));
        qtdParcelas.setText(String.valueOf(NParcelas));
        
        valorParcela.setEnabled(false);
        qtdParcelas.setEnabled(false);
        codVenda.setEnabled(false);
        valorVenda.setEnabled(false);
        formaPagamento.setEnabled(false);
    }
    
}
