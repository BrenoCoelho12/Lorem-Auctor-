package tcc.apresentacao;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import static tcc.apresentacao.ExecutarVenda.pesquisaProduto;
import tcc.dominio.MovimentoDiario;
import tcc.dominio.TipoProduto;
import tcc.negocio.MovimentoDiarioController;
import tcc.negocio.ProdutosController;

/**
 *
 * @author Breno-
 */
public class MovimentosDiarios extends javax.swing.JInternalFrame {

    ProdutosController ProdutosController = new ProdutosController();
    MovimentoDiarioController MovimentoController = new MovimentoDiarioController();

    SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
    GregorianCalendar calendar = new GregorianCalendar();

    public MovimentosDiarios() {

        initComponents();
        vData.setText(formatador.format(calendar.getTime()));
        total.setForeground(Color.blue);
        total.setFont(new Font("Times New Roman", Font.BOLD, 14));
        //JCOMBOBOX
        carregarTabela();

        //LEVAR OS PRODUTOS ATÉ A TABELA
        TableModelListener listener;
        listener = new TableModelListener() {
            float soma = 0;

            @Override

            public void tableChanged(TableModelEvent e) {

                if (e.getType() == TableModelEvent.UPDATE) {
                    int linha = e.getFirstRow();
                    int coluna = e.getColumn();
                    float valorQtd = Float.parseFloat(tabelaMovimentoDiario.getModel().getValueAt(linha, 3).toString());
                    float valorVarejo = Float.parseFloat(tabelaMovimentoDiario.getModel().getValueAt(linha, 2).toString());
                    float subTotal = Float.parseFloat(tabelaMovimentoDiario.getModel().getValueAt(linha, 4).toString());

                    if (subTotal != valorQtd * valorVarejo) {
                        tabelaMovimentoDiario.getModel().setValueAt(
                                (float) valorQtd * valorVarejo,
                                linha,
                                4);
                        calculaValoresProdutoTabela();
                    }
                }
            }
        };
        tabelaMovimentoDiario.getModel().addTableModelListener(listener);
    }

    public static void calculaValoresProdutoTabela() {
        NumberFormat df = new DecimalFormat("####.##");
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        float soma = 0F;
        for (int i = 0; i < tabelaMovimentoDiario.getModel().getRowCount(); i++) {
            float valorQtd = Float.parseFloat(tabelaMovimentoDiario.getModel().getValueAt(i, 3).toString());
            float valorVarejo = Float.parseFloat(tabelaMovimentoDiario.getModel().getValueAt(i, 2).toString());
            tabelaMovimentoDiario.getModel().setValueAt(
                    (float) valorQtd * valorVarejo,
                    i,
                    4);
            Float valor = (Float) tabelaMovimentoDiario.getValueAt(i, 4);
            soma = soma + valor;
            df.format(soma);

        }

        total.setText(String.valueOf(df.format(soma).replaceAll(",", ".")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaMovimentoDiario = new javax.swing.JTable();
        total = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        pesquisaProduto = new javax.swing.JTextField();
        descricao = new javax.swing.JComboBox();
        vData = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Lorem Auctor - Movimentação Diária");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Data:");

        tabelaMovimentoDiario.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tabelaMovimentoDiario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód", "Produto", "Valor Varejo", "Quantidade (X)", "SubTotal", "Unidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelaMovimentoDiario.setRowHeight(35);
        jScrollPane1.setViewportView(tabelaMovimentoDiario);
        if (tabelaMovimentoDiario.getColumnModel().getColumnCount() > 0) {
            tabelaMovimentoDiario.getColumnModel().getColumn(0).setMinWidth(40);
            tabelaMovimentoDiario.getColumnModel().getColumn(0).setPreferredWidth(40);
            tabelaMovimentoDiario.getColumnModel().getColumn(0).setMaxWidth(40);
            tabelaMovimentoDiario.getColumnModel().getColumn(2).setMinWidth(150);
            tabelaMovimentoDiario.getColumnModel().getColumn(2).setPreferredWidth(150);
            tabelaMovimentoDiario.getColumnModel().getColumn(2).setMaxWidth(150);
            tabelaMovimentoDiario.getColumnModel().getColumn(3).setMinWidth(100);
            tabelaMovimentoDiario.getColumnModel().getColumn(3).setPreferredWidth(100);
            tabelaMovimentoDiario.getColumnModel().getColumn(3).setMaxWidth(100);
            tabelaMovimentoDiario.getColumnModel().getColumn(4).setMinWidth(70);
            tabelaMovimentoDiario.getColumnModel().getColumn(4).setPreferredWidth(70);
            tabelaMovimentoDiario.getColumnModel().getColumn(4).setMaxWidth(70);
            tabelaMovimentoDiario.getColumnModel().getColumn(5).setMinWidth(70);
            tabelaMovimentoDiario.getColumnModel().getColumn(5).setPreferredWidth(70);
            tabelaMovimentoDiario.getColumnModel().getColumn(5).setMaxWidth(70);
        }

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Total Diário:");

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/13.png"))); // NOI18N
        jButton2.setText("Cadastrar Movimentação");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/5.png"))); // NOI18N
        jLabel6.setText("Pesquisar:");

        pesquisaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pesquisaProdutoKeyPressed(evt);
            }
        });

        descricao.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        descricao.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descricaoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(270, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(pesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(81, 81, 81)
                        .addComponent(vData, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(vData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jLabel4))
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(tabelaMovimentoDiario.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "Insira produto(s) na venda.");
            return;
        }
        
        MovimentoDiario md = new MovimentoDiario();
        BigDecimal precoTotal = new BigDecimal(total.getText().trim());
        

        String diaD = vData.getText().substring(0,2);
        String mesD = vData.getText().substring(3,5);
        String anoD = vData.getText().substring(6);
        String dataParaMysql = anoD+"-"+mesD+"-"+diaD;
        
        
        md.setPrecoTotal(precoTotal);
        md.setDataCadastroVarejo(dataParaMysql);

        try {
            MovimentoController.CadastrarMovimentacao(md);
            JOptionPane.showMessageDialog(null, "Movimentação cadastrada com sucesso!");
            limparDados();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar a movimentação!");
        }
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void pesquisaProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaProdutoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            abrirTabelaProdutos();
        }
    }//GEN-LAST:event_pesquisaProdutoKeyPressed

    private void descricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descricaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            abrirTabelaProdutos();
        }
    }//GEN-LAST:event_descricaoKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox descricao;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField pesquisaProduto;
    public static javax.swing.JTable tabelaMovimentoDiario;
    private static javax.swing.JTextField total;
    private javax.swing.JTextField vData;
    // End of variables declaration//GEN-END:variables

    public static void addLinha(Vector v, int quantidade) {
        ((DefaultTableModel) tabelaMovimentoDiario.getModel()).addRow(new Object[]{
            v.elementAt(0),
            v.elementAt(1),
            v.elementAt(7),
            quantidade,
            0,
            v.elementAt(3)
        });

    }

    private void carregarTabela() {
        try {
            List<TipoProduto> produtos = ProdutosController.listarDescricao();
            for (TipoProduto produto : produtos) {

                descricao.addItem(produto);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possivel mostrar os produtos!");

        }
    }

    private void limparDados() {
        total.setText("");
    }

    public Date getStringToData(String pData) {
        java.util.Date dataa = null;
        SimpleDateFormat formatDate;
        try {
            try {
                formatDate = new SimpleDateFormat("yyyy-MM-dd");
                dataa = formatDate.parse(pData);
            } catch (Exception e) {
                try {
                    formatDate = new SimpleDateFormat("yyyy-MM-dd");
                    dataa = formatDate.parse(pData);
                } catch (Exception e1) {
                    formatDate = new SimpleDateFormat("yyyy-MM-dd");
                    dataa = formatDate.parse(pData);
                }
            }
        } catch (Exception e) {
        }
        return new Date(dataa.getTime());
    }

    public void abrirTabelaProdutos() {
        String tipoProduto = descricao.getSelectedItem().toString();

        if (tipoProduto.equals("Motocicleta")) {
            TabeladeMoto tbm = new TabeladeMoto();
            TelaPrincipal.Addtelaprincipal(tbm);
            TelaPrincipal.centralizar(tbm);
            TabeladeMoto.pesquisarProduto(pesquisaProduto.getText());
        } else if (tipoProduto.equals("Bicicleta")) {
            TabeladeBicicleta tbb = new TabeladeBicicleta();
            TelaPrincipal.Addtelaprincipal(tbb);
            TelaPrincipal.centralizar(tbb);
            TabeladeBicicleta.pesquisarProduto(pesquisaProduto.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione o tipo do produto ao lado.");
        }

    }
}
