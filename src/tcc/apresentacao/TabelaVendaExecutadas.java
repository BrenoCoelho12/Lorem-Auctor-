
package tcc.apresentacao;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JRException;
import tcc.dao.VendaDao;
import tcc.dominio.Venda;
import tcc.negocio.VendaController;
import tcc.relatorios.PfdVenda;

/**
 *
 * @author Breno-
 */
 public class TabelaVendaExecutadas extends javax.swing.JInternalFrame {

        VendaController vendacontroller = new VendaController();
  
        String[] colunas = {"Cód.Venda" , "Data da Venda","Forma de Pagamento" ,"Cliente", "Valor", "Acrescimos", "Volumes", "Ações", "Ações", "Situação"};
    
        public TabelaVendaExecutadas() {
        initComponents();
        String idCliente = JOptionPane.showInputDialog("Informe o cód. do cliente:", "");
        int id = Integer.parseInt(idCliente);
            
        if(id == 0 ){
            buscarVendasRealizadasSemFiltro();
        }
        else {
            buscarVendasRealizadas(id);
            camposEnabled();
       
        }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaVendas = new javax.swing.JTable();
        cliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dataVenda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        valor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        acrescimos = new javax.swing.JTextField();
        volumes = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        vendedor = new javax.swing.JTextField();
        situacao = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        filtroCliente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Lorem Auctor - Tabela de Vendas Realizadas");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        TabelaVendas.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TabelaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data da Venda", "Cliente", "Valor", "Acrescimo", "Desconto", "Volume", "Vendedor", "idVendedor", "Situação", "idCliente", "Ações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelaVendas.setRowHeight(35);
        TabelaVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaVendasMouseClicked(evt);
            }
        });
        TabelaVendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TabelaVendasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TabelaVendasKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(TabelaVendas);
        if (TabelaVendas.getColumnModel().getColumnCount() > 0) {
            TabelaVendas.getColumnModel().getColumn(0).setMinWidth(30);
            TabelaVendas.getColumnModel().getColumn(0).setPreferredWidth(30);
            TabelaVendas.getColumnModel().getColumn(0).setMaxWidth(30);
            TabelaVendas.getColumnModel().getColumn(1).setMinWidth(110);
            TabelaVendas.getColumnModel().getColumn(1).setPreferredWidth(110);
            TabelaVendas.getColumnModel().getColumn(1).setMaxWidth(110);
            TabelaVendas.getColumnModel().getColumn(3).setMinWidth(90);
            TabelaVendas.getColumnModel().getColumn(3).setPreferredWidth(90);
            TabelaVendas.getColumnModel().getColumn(3).setMaxWidth(90);
            TabelaVendas.getColumnModel().getColumn(4).setMinWidth(90);
            TabelaVendas.getColumnModel().getColumn(4).setPreferredWidth(90);
            TabelaVendas.getColumnModel().getColumn(4).setMaxWidth(90);
            TabelaVendas.getColumnModel().getColumn(5).setMinWidth(90);
            TabelaVendas.getColumnModel().getColumn(5).setPreferredWidth(90);
            TabelaVendas.getColumnModel().getColumn(5).setMaxWidth(90);
            TabelaVendas.getColumnModel().getColumn(6).setMinWidth(90);
            TabelaVendas.getColumnModel().getColumn(6).setPreferredWidth(90);
            TabelaVendas.getColumnModel().getColumn(6).setMaxWidth(90);
            TabelaVendas.getColumnModel().getColumn(7).setMinWidth(90);
            TabelaVendas.getColumnModel().getColumn(7).setPreferredWidth(90);
            TabelaVendas.getColumnModel().getColumn(7).setMaxWidth(90);
            TabelaVendas.getColumnModel().getColumn(8).setMinWidth(30);
            TabelaVendas.getColumnModel().getColumn(8).setPreferredWidth(30);
            TabelaVendas.getColumnModel().getColumn(8).setMaxWidth(30);
            TabelaVendas.getColumnModel().getColumn(9).setMinWidth(90);
            TabelaVendas.getColumnModel().getColumn(9).setPreferredWidth(90);
            TabelaVendas.getColumnModel().getColumn(9).setMaxWidth(90);
            TabelaVendas.getColumnModel().getColumn(10).setMinWidth(30);
            TabelaVendas.getColumnModel().getColumn(10).setPreferredWidth(30);
            TabelaVendas.getColumnModel().getColumn(10).setMaxWidth(30);
        }

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Data da Venda:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Cliente:");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Valor:");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Acrescimos:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Volumes:");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Vendedor:");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Situação:");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/5.png"))); // NOI18N
        jLabel11.setText("Pesquisar Cliente:");

        filtroCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                filtroClienteKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cliente, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                .addComponent(filtroCliente)))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dataVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(valor))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(volumes))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(acrescimos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(situacao))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 72, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(dataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(acrescimos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel11)
                        .addComponent(filtroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(volumes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(situacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addGap(90, 90, 90))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TabelaVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaVendasMouseClicked
        buscarValoresLinhas();
    }//GEN-LAST:event_TabelaVendasMouseClicked

    private void TabelaVendasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabelaVendasKeyReleased
        buscarValoresLinhas();
    }//GEN-LAST:event_TabelaVendasKeyReleased

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed

    }//GEN-LAST:event_jPanel1KeyPressed

    private void filtroClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtroClienteKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            filtroCliente.setText(filtroCliente.getText().toUpperCase());
            buscarVendasRealizadas(Integer.parseInt(filtroCliente.getText()));
        }
    }//GEN-LAST:event_filtroClienteKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        filtroCliente.setText(filtroCliente.getText().toUpperCase());
        buscarVendasRealizadas(Integer.parseInt(filtroCliente.getText()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TabelaVendasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabelaVendasKeyPressed
         buscarValoresLinhas();
    }//GEN-LAST:event_TabelaVendasKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaVendas;
    private javax.swing.JTextField acrescimos;
    private javax.swing.JTextField cliente;
    private javax.swing.JTextField dataVenda;
    private javax.swing.JTextField filtroCliente;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField situacao;
    private javax.swing.JTextField valor;
    private javax.swing.JTextField vendedor;
    private javax.swing.JTextField volumes;
    // End of variables declaration//GEN-END:variables

        private void buscarVendasRealizadas(int pesquisa) {
           
        try {
            VendaDao vdao = new VendaDao();
            List<Venda> venda = vdao.buscarVendasx(pesquisa);
            DefaultTableModel model = new DefaultTableModel(colunas, 0);
            for (Venda y : venda) {
                model.addRow(new Object[] {
                    y.getIdVenda(),
                    y.getDataVenda(),
                    y.getFormaPagamento(),
                    y.getClienteFisico(),
                    y.getTotal(),
                    y.getAcrescimos(),
                    y.getQtdVolume(),
                    y.getSituacao()
                  });
            }
           TabelaVendas.setModel(model);
           
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao listar as Vendas!");
        }
        TabelaVendas.getColumnModel().getColumn(0).setPreferredWidth(15);
        TabelaVendas.getColumnModel().getColumn(7).setPreferredWidth(30);
        TabelaVendas.getColumnModel().getColumn(6).setPreferredWidth(15);
        TabelaVendas.getColumnModel().getColumn(4).setPreferredWidth(15);
        TabelaVendas.getColumnModel().getColumn(5).setPreferredWidth(15);
        TabelaVendas.getColumnModel().getColumn(8).setPreferredWidth(80);
        TabelaVendas.getColumnModel().getColumn(1).setPreferredWidth(110);
        TabelaVendas.getColumnModel().getColumn(2).setPreferredWidth(140);
        TabelaVendas.getColumnModel().getColumn(3).setPreferredWidth(150);
        ButtonColumn buttonColumn = new ButtonColumn(TabelaVendas, 8, "Imprimir");
       ButtonColumn2 buttonColumn2 = new ButtonColumn2(TabelaVendas, 9, "Detalhar Venda");
       TabelaVendas.setDefaultEditor(Object.class, null);
          }

        
        private void buscarVendasRealizadasSemFiltro() {
           
        try {
            VendaDao vdao = new VendaDao();
            List<Venda> venda = vdao.listarVendas();
            DefaultTableModel model = new DefaultTableModel(colunas, 0);
            for (Venda y : venda) {
                model.addRow(new Object[] {
                    y.getIdVenda(),
                    y.getDataVenda(),
                    y.getFormaPagamento(),
                    y.getClienteFisico(),
                    y.getTotal(),
                    y.getAcrescimos(),
                    y.getQtdVolume(),
                    y.getSituacao()
                  });
            }
           TabelaVendas.setModel(model);
           
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao listar as Vendas!");
        }
        TabelaVendas.getColumnModel().getColumn(0).setPreferredWidth(15);
        TabelaVendas.getColumnModel().getColumn(7).setPreferredWidth(30);
        TabelaVendas.getColumnModel().getColumn(6).setPreferredWidth(15);
        TabelaVendas.getColumnModel().getColumn(4).setPreferredWidth(15);
        TabelaVendas.getColumnModel().getColumn(5).setPreferredWidth(15);
        TabelaVendas.getColumnModel().getColumn(8).setPreferredWidth(80);
        TabelaVendas.getColumnModel().getColumn(1).setPreferredWidth(110);
        TabelaVendas.getColumnModel().getColumn(2).setPreferredWidth(140);
        TabelaVendas.getColumnModel().getColumn(3).setPreferredWidth(150);
        ButtonColumn buttonColumn = new ButtonColumn(TabelaVendas, 8, "Imprimir");
       ButtonColumn2 buttonColumn2 = new ButtonColumn2(TabelaVendas, 9, "Detalhar Venda");
       TabelaVendas.setDefaultEditor(Object.class, null);
          }
        
        
    class ButtonColumn extends AbstractCellEditor implements TableCellRenderer, TableCellEditor, ActionListener
    {
        JTable table;
        JButton renderButton;
        JButton editButton;
        String text;
        public ButtonColumn(JTable table, int column, String text)
        {
            super();
            this.table = table;
            renderButton = new JButton();
            renderButton.setText(text);
            editButton = new JButton();
            editButton.setFocusPainted( false );
            editButton.addActionListener( this );
            editButton.setText(text);
            TableColumnModel columnModel = table.getColumnModel();
            columnModel.getColumn(column).setCellRenderer( this );
            columnModel.getColumn(column).setCellEditor( this );
        }
        public Component getTableCellRendererComponent(
            JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
        {
            if (hasFocus)
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }
            else if (isSelected)
            {
                renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
            else
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }
            //renderButton.setText( (value == null) ? "" : value.toString() );
            return renderButton;
        }
        public Component getTableCellEditorComponent(
            JTable table, Object value, boolean isSelected, int row, int column)
        {
            //text = (value == null) ? "" : value.toString();
            //editButton.setText( text );
            return editButton;
        }
        public Object getCellEditorValue()
        {
            return text;
        }
        public void actionPerformed(ActionEvent e)
        {
            int idVenda = Integer.parseInt(table.getModel().getValueAt(table.getSelectedRow(), 0).toString());
            VendaDao vendaDao = new VendaDao();
            try {
                Venda venda = vendaDao.pdfVenda(idVenda);
                venda = vendaDao.buscarItensProdutosPorVenda(venda);
                PfdVenda.gerarRelatorio(venda, "RelatorioVenda");
            } catch (SQLException ex) {
                Logger.getLogger(TabelaVendaExecutadas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JRException ex) {
                Logger.getLogger(TabelaVendaExecutadas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(TabelaVendaExecutadas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
     class ButtonColumn2 extends AbstractCellEditor implements TableCellRenderer, TableCellEditor, ActionListener
    {
        JTable table;
        JButton renderButton;
        JButton editButton;
        String text;
        public ButtonColumn2(JTable table, int column, String text)
        {
            super();
            this.table = table;
            renderButton = new JButton();
            renderButton.setText(text);
            editButton = new JButton();
            editButton.setFocusPainted( false );
            editButton.addActionListener( this );
            editButton.setText(text);
            TableColumnModel columnModel = table.getColumnModel();
            columnModel.getColumn(column).setCellRenderer( this );
            columnModel.getColumn(column).setCellEditor( this );
        }
        public Component getTableCellRendererComponent(
            JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
        {
            if (hasFocus)
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }
            else if (isSelected)
            {
                renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
            else
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }
            //renderButton.setText( (value == null) ? "" : value.toString() );
            return renderButton;
        }
        public Component getTableCellEditorComponent(
            JTable table, Object value, boolean isSelected, int row, int column)
        {
            //text = (value == null) ? "" : value.toString();
            //editButton.setText( text );
            return editButton;
        }
        public Object getCellEditorValue()
        {
            return text;
        }
        public void actionPerformed(ActionEvent e)
        {
            int linhaSelecionada = TabelaVendas.getSelectedRow();
            int idVenda = Integer.parseInt(table.getModel().getValueAt(table.getSelectedRow(), 0).toString());
            Vector vetor = ((DefaultTableModel) table.getModel()).getDataVector();
            

            TabelaParcelas obj0 = new TabelaParcelas();
            TelaPrincipal.Addtelaprincipal(obj0);
            TabelaParcelas.carregarinformacoescliente((Vector)vetor.get(linhaSelecionada));
        }
    }
    
    public void buscarValoresLinhas() {
        int linha = TabelaVendas.getSelectedRow();
        
        String[] colunas = {"Cód.Venda" , "Data da Venda","Forma de Pagamento" ,"Cliente", "Valor", "Acrescimos", "Desconto", "Volumes", "Situação", "Ações", "Ações"};
        String id = (String)TabelaVendas.getValueAt(linha, 0).toString();
        String dataVendax = (String) TabelaVendas.getValueAt(linha, 1);
        String dataVencimentox = (String) TabelaVendas.getValueAt(linha, 2);
        String clientex = (String) TabelaVendas.getValueAt(linha, 3).toString();
        String valorx = (String) TabelaVendas.getValueAt(linha, 4).toString();
        String acrescimosx = (String) TabelaVendas.getValueAt(linha, 5).toString();
        String volumesx = (String) TabelaVendas.getValueAt(linha, 7).toString();
        String situacaox = (String) TabelaVendas.getValueAt(linha, 8);
        
          dataVenda.setText(dataVendax);
          cliente.setText(clientex);
          valor.setText(valorx);
          acrescimos.setText(acrescimosx);
          volumes.setText(volumesx);
          situacao.setText(situacaox);
          
          dataVenda.setEnabled(false);
          cliente.setEnabled(false);
          valor.setEnabled(false);
          acrescimos.setEnabled(false);
          volumes.setEnabled(false);
          vendedor.setEnabled(false);   
          situacao.setEnabled(false);
          
          
          dataVenda.setForeground(Color.BLACK); 
          dataVenda.setFont(new Font("Arial", Font.BOLD, 14));
          
          cliente.setForeground(Color.BLACK);
          cliente.setFont(new Font("Arial", Font.BOLD, 14));
          
          valor.setForeground(Color.BLACK); 
          valor.setFont(new Font("Arial", Font.BOLD, 14));
          
          acrescimos.setForeground(Color.BLACK);
          acrescimos.setFont(new Font("Arial", Font.BOLD, 14));
          
          volumes.setForeground(Color.BLACK); 
          volumes.setFont(new Font("Arial", Font.BOLD, 14));
          
          situacao.setForeground(Color.BLACK); 
          situacao.setFont(new Font("Arial", Font.BOLD, 14));
    }
    
    private void camposEnabled(){
          dataVenda.setEnabled(false);
          cliente.setEnabled(false);
          valor.setEnabled(false);
          acrescimos.setEnabled(false);
          volumes.setEnabled(false);
          vendedor.setEnabled(false);   
          situacao.setEnabled(false);
    }
 }

